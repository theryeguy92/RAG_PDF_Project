# tasks/playbook_install_k8s_packages.yaml

- name: Remove old Kubernetes repository file
  file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: absent

- name: Remove old Kubernetes GPG key
  file:
    path: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    state: absent

- name: Install dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Create directory for apt keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download and dearmor Kubernetes GPG key
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg
  args:
    executable: /bin/bash
    creates: /etc/apt/keyrings/kubernetes-archive-keyring.gpg

- name: Add Kubernetes apt repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes.list
    update_cache: yes

- name: Install Kubernetes packages
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes

- name: Install containerd
  apt:
    name:
      - containerd.io
    state: present
    update_cache: yes

- name: Create containerd configuration directory
  file:
    path: /etc/containerd
    state: directory

- name: Generate default containerd configuration
  shell: |
    containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
  become: true

- name: Enable `cri` plugin in containerd
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)#(version = 2)'
    line: 'version = 2'
  notify: Restart containerd

- name: Ensure br_netfilter and overlay modules are loaded
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Load br_netfilter and overlay modules
  shell: |
    modprobe overlay
    modprobe br_netfilter
  args:
    executable: /bin/bash

- name: Apply sysctl parameters for Kubernetes
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Reload sysctl configuration
  command: sysctl --system

- name: Hold Kubernetes packages at current version
  shell: |
    apt-mark hold kubelet kubeadm kubectl
  args:
    executable: /bin/bash

- name: Enable and start kubelet service
  systemd:
    name: kubelet
    enabled: yes
    state: started